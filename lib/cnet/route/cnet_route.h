/* SPDX-License-Identifier: BSD-3-Clause
 * Copyright (c) 2016-2023 Intel Corporation
 */

#ifndef __CNET_ROUTE_H
#define __CNET_ROUTE_H

/**
 * @file
 * CNET Route routines and constants.
 */

struct netif;
#ifdef __cplusplus
extern "C" {
#endif

#define RT_DEFAULT_TIMEOUT 300
#define RTM_INFINITY       16

/* Route flag values */
#define _RTF_UP        0x1     /**< Route usable */
#define _RTF_GATEWAY   0x2     /**< Destination is reached thru a gateway */
#define _RTF_HOST      0x4     /**< Host entry (net otherwise) */
#define _RTF_REJECT    0x8     /**< Host or net unreachable */
#define _RTF_DYNAMIC   0x10    /**< Created dynamically */
#define _RTF_MODIFIED  0x20    /**< Modified dynamically */
#define _RTF_DONE      0x40    /**< Message confirmed */
#define _RTF_MASK      0x80    /**< Subnet mask present */
#define _RTF_CLONING   0x100   /**< Generate new routes on use */
#define _RTF_XRESOLVE  0x200   /**< External daemon resolves name */
#define _RTF_LLINFO    0x400   /**< Generated by IPv4 ARP or IPv6 NDP */
#define _RTF_STATIC    0x800   /**< Manually added */
#define _RTF_BLACKHOLE 0x1000  /**< Just discard pkts (during updates) */
#define _RTF_PROTO1    0x4000  /**< protocol specific routing flag #1 */
#define _RTF_PROTO2    0x8000  /**< protocol specific routing flag #2 */
#define _RTF_PREF      0x10000 /**< Add route first, no ECMP */
#define _RTF_SRCADDR   0x20000 /**< gateway field specifies src addr */
#define _RTF_MBINDING  0x40000 /**< This route is part of multiple binding */
#define _RTF_SKIP      0x80000 /**< Treat route as a lookup failure */

#ifdef __cplusplus
}
#endif

#endif /* __CNET_ROUTE_H */
